<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: sdk.proto

namespace Agones\Dev\Sdk\GameServer\Spec;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>agones.dev.sdk.GameServer.Spec.Health</code>
 */
class Health extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>bool disabled = 1;</code>
     */
    protected $disabled = false;
    /**
     * Generated from protobuf field <code>int32 period_seconds = 2;</code>
     */
    protected $period_seconds = 0;
    /**
     * Generated from protobuf field <code>int32 failure_threshold = 3;</code>
     */
    protected $failure_threshold = 0;
    /**
     * Generated from protobuf field <code>int32 initial_delay_seconds = 4;</code>
     */
    protected $initial_delay_seconds = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type bool $disabled
     *     @type int $period_seconds
     *     @type int $failure_threshold
     *     @type int $initial_delay_seconds
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Sdk::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>bool disabled = 1;</code>
     * @return bool
     */
    public function getDisabled()
    {
        return $this->disabled;
    }

    /**
     * Generated from protobuf field <code>bool disabled = 1;</code>
     * @param bool $var
     * @return $this
     */
    public function setDisabled($var)
    {
        GPBUtil::checkBool($var);
        $this->disabled = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>int32 period_seconds = 2;</code>
     * @return int
     */
    public function getPeriodSeconds()
    {
        return $this->period_seconds;
    }

    /**
     * Generated from protobuf field <code>int32 period_seconds = 2;</code>
     * @param int $var
     * @return $this
     */
    public function setPeriodSeconds($var)
    {
        GPBUtil::checkInt32($var);
        $this->period_seconds = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>int32 failure_threshold = 3;</code>
     * @return int
     */
    public function getFailureThreshold()
    {
        return $this->failure_threshold;
    }

    /**
     * Generated from protobuf field <code>int32 failure_threshold = 3;</code>
     * @param int $var
     * @return $this
     */
    public function setFailureThreshold($var)
    {
        GPBUtil::checkInt32($var);
        $this->failure_threshold = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>int32 initial_delay_seconds = 4;</code>
     * @return int
     */
    public function getInitialDelaySeconds()
    {
        return $this->initial_delay_seconds;
    }

    /**
     * Generated from protobuf field <code>int32 initial_delay_seconds = 4;</code>
     * @param int $var
     * @return $this
     */
    public function setInitialDelaySeconds($var)
    {
        GPBUtil::checkInt32($var);
        $this->initial_delay_seconds = $var;

        return $this;
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Health::class, \Agones\Dev\Sdk\GameServer_Spec_Health::class);

